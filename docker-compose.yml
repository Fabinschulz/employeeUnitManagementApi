services:
  postgres:
    image: postgres:15.8-alpine
    container_name: postgres_container
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: employeeUnitDB
    networks:
      - employeeUnitDB_network
    volumes:
      - ./db/:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:6.2.6-alpine
    container_name: redis_container
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - employeeUnitDB_network
    volumes:
      - 'employeeUnitDB_redis_data:/data'

  api:
    container_name: api_container
    ports:
      - "8080:8080"
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - employeeUnitDB_network

networks:
  employeeUnitDB_network:
    driver: bridge

volumes:
  db:
  employeeUnitDB_redis_data: